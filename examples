-- test 1
{- PASSED
ghci> get "red" [("yellow",(Intval 5)),("red",(Intval 3))]
Intval 3
-}

{- PASSED
ghci> s1=[("x",(Intval 1)) ,("y",(Intval 5))]  
ghci> eval (Var "x") s1 
Intval 1
ghci> eval (Aop "+" (Var "x") (Lit (Intval 4))) s1
Intval 5
ghci> eval (Aop "+" (Var "x") (Aop "*" (Lit (Intval 4)) (Var "y"))) s1
Intval 21
-}

{- PASSED
ghci> s1=[("x",(Intval 1)) ,("y",(Intval 5))]
ghci> beval (Bop "&&" (Blit (Boolval True)) (Rop "<" (Var "x") (Lit (Intval 3)))) s1
Boolval True
ghci> beval (Bop "&&" (Rop "<" (Var "y") (Lit (Intval 2))) (Rop "<" (Var "x") (Lit (Intval 3)))) s1
Boolval False
-}

{- PASSED
ghci> m p0 s1
[("x",Intval 2),("y",Intval 5)]
ghci> m p1 s1
[("x",Intval 10),("y",Intval 5)]
ghci> m p2 s1
[("x",Intval 6),("y",Intval 5)]

ghci> getFibN fibState fibNext (Intval 7)
[("F_0",0),("F_1",1),("F_2",1),("F_3",2),("F_4",3),("F_5",5),("F_6",8)]
ghci> getFibN fibState fibNext (Intval 1)
[("F_0",0)]
ghci> getFibN fibState fibNext (Intval 2)
[("F_0",0),("F_1",1)]
ghci> getFibN fibState fibNext (Intval 15)
[("F_0",0),("F_1",1),("F_2",1),("F_3",2),("F_4",3),("F_5",5),("F_6",8),("F_7",13),("F_8",21),("F_9",34),("F_10",55),("F_11",89),("F_12",144),("F_13",233),("F_14",377)]
-}